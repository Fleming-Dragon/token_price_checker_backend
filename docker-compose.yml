version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7-jammy
    container_name: token-oracle-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: token_oracle
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - token-oracle-network

  # Redis cache
  redis:
    image: redis:7-alpine
    container_name: token-oracle-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - token-oracle-network

  # Redis Commander (optional - Redis management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: token-oracle-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
    depends_on:
      - redis
    networks:
      - token-oracle-network
    profiles:
      - tools

  # MongoDB Express (optional - MongoDB management UI)
  mongo-express:
    image: mongo-express:latest
    container_name: token-oracle-mongo-express
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    depends_on:
      - mongodb
    networks:
      - token-oracle-network
    profiles:
      - tools

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  token-oracle-network:
    driver: bridge
